<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Homepage on Popa Ioan Alexandru</title><link>https://alex11br.github.io/</link><description>Recent content in Homepage on Popa Ioan Alexandru</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Feel free to do whatever with my content, unless another stricter license is specified.</copyright><lastBuildDate>Sat, 06 Nov 2021 22:11:46 +0200</lastBuildDate><atom:link href="https://alex11br.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Gxhk, a special X hotkey daemon made by me</title><link>https://alex11br.github.io/posts/gxhk/</link><pubDate>Wed, 29 Dec 2021 23:59:12 +0200</pubDate><guid>https://alex11br.github.io/posts/gxhk/</guid><description>gxhk, which stands for Go X hotkey (daemon), is an application that I made. It is a hotkey daemon for X, something in the vein of sxhkd, if you know what it is (if not, then this app is not for you, probably). When hotkeys (such as Alt+F1) get pressed (or released), the user can run various commands with the help of the hotkey daemon. My hotkey daemon has some unique features: it can be configured on the fly using a socket (similarly to bspwm for those who know it ðŸ˜‰) to listen to certain hotkeys and execute their commands, or to stop listening to some hotkeys, or show infos about the currently grabbed hotkeys and their associated commands.</description><content:encoded><![CDATA[<p><a href="https://github.com/ALEX11BR/gxhk"><code>gxhk</code></a>, which stands for <em>Go X hotkey (daemon)</em>, is an application that I made. It is a hotkey daemon for X, something in the vein of <a href="https://github.com/baskerville/sxhkd"><code>sxhkd</code></a>, if you know what it is (if not, then this app is not for you, probably). When hotkeys (such as Alt+F1) get pressed (or released), the user can run various commands with the help of the hotkey daemon. My hotkey daemon has some unique features: it can be configured on the fly using a socket (similarly to <a href="https://github.com/baskerville/bspwm"><code>bspwm</code></a> for those who know it ðŸ˜‰) to listen to certain hotkeys and execute their commands, or to stop listening to some hotkeys, or show infos about the currently grabbed hotkeys and their associated commands. This app works only on Linux &amp; friends, on X desktops (not on Wayland).</p>
<p>I initially planned to write this app in Rust, the hot language right now. That being said, there weren&rsquo;t satisfactory bindings of the X libraries to Rust that could convert keysyms (numbers representing precisely the symbols on the keys of the keyboard) to keycodes (8-bit numbers that represent to the X server the keys of a desktop user&rsquo;s keyboard), so I contemplated other languages for this project of an X hotkey daemon configurable like <code>bspwm</code>, and found Go to be a good option as a low-level language for my project, as it had a good X binding (<code>xgb</code>) with a helper library called <a href="https://github.com/jezek/xgbutil/"><code>xgbutil</code></a> which even provided a readily done hotkey parser, how lovely! Go won me as opposed to Rust, again. I went on to make the rest of the app with all the features I planned to implement for this project. That being said, there was still a <em>small</em> issue.</p>
<p>I was a little bit frustrated that <code>xgbutil</code> doesn&rsquo;t have a method of converting keysyms to the string which names them (e.g. &ldquo;bar&rdquo;), but rather to the string they output (e.g. &ldquo;|&rdquo;), and that made me store the necessary information about the bound keys for displaying it on demand in a manner which could cause bugs, and I didn&rsquo;t like that.</p>
<p>One of the options that I considered was to fork the <code>xgbutil</code> to expose the functionality that I needed, as the project is basically <del>dead</del> done and sees no contributions anymore, and also address the fact that it used the <a href="https://en.wikipedia.org/wiki/WTFPL">WTFPL</a> which wasn&rsquo;t liked by <a href="https://pkg.go.dev">pkg.go.dev</a>, the site which automatically displays the documentation of Go libraries. After a good night&rsquo;s sleep, I went ahead, <a href="https://github.com/ALEX11BR/xgbutil">forked <code>xgbutil</code></a>, made the necessary changes to it, then to my application, and now my app is finnaly the way I wanted it.</p>
<p>There are more features that could be added to my hotkey daemon, like multi-hotkey chords or mouse bindings, that I will probably implement some day, who knows&hellip;</p>
]]></content:encoded></item><item><title>ThemeChanger, my first serious linux deskop app</title><link>https://alex11br.github.io/posts/themechanger/</link><pubDate>Mon, 06 Dec 2021 07:51:57 +0000</pubDate><guid>https://alex11br.github.io/posts/themechanger/</guid><description>ThemeChanger is an application that I made, one of my more ambitious projects so far. It is made for linux systems (and it should work on other friends like BSDs), and it does what it says: it changes themes. It is made to work with various desktop environments or none at all. While there is similar app called lxappearance which is also a GUI theme changer, my app has a bunch of extra features.</description><content:encoded><![CDATA[<p><img loading="lazy" src="https://raw.githubusercontent.com/ALEX11BR/ThemeChanger/master/screenshot1.png" alt="A screenshot of our lovely ThemeChanger"  />
</p>
<p><a href="https://github.com/ALEX11BR/ThemeChanger">ThemeChanger</a> is an application that I made, one of my more ambitious projects so far. It is made for linux systems (and it should work on other friends like BSDs), and it does what it says: it changes themes. It is made to work with various desktop environments or none at all. While there is similar app called <code>lxappearance</code> which is also a GUI theme changer, my app has a bunch of extra features.</p>
<h2 id="how-i-got-the-idea-for-this-app">How I got the idea for this app</h2>
<p>As I started using linux more and more, I eventually learned about tiling window managers, and started using them instead of regular desktop environments. I was a little bit too obsessed with ensuring a consistent look &amp; feel for my desktop, and the available GUI tools had some limitations that I felt could be addressed by a new application that I could write. So I started working on a such application: I attempted multiple programming languages, but ended up with Python, as I could do stuff easier with it.</p>
<h2 id="features-of-the-app">Features of the app</h2>
<ul>
<li>Sets GTK themes.</li>
<li>Sets icon themes.</li>
<li>Sets cursor themes.</li>
<li>Sets Kvantum themes, if support is detected.</li>
<li>Can set different themes for GTK 2, GTK 4 (useful if the currently selected theme for GTK 3 doesn&rsquo;t have a version for any of these versions).</li>
<li>All these themes can be selected using a searchable theme list, which makes managing a large theme collection easier. The first 3 have also thumbails for each theme so that they can be easily identified.</li>
<li>Supports live reloading using a variety of mechanisms: either the DE-independent <code>xsettingsd</code>, or the various solutions provided by each DE (note that setting different GTK themes for different versions can&rsquo;t work at all in this case).</li>
<li>Lets the user make and edit custom GTK CSS with live, in-app preview.</li>
<li>Sets various options related to fonts widgets, etc.</li>
<li>Lets the user quickly install theme archives to their user installation paths.</li>
</ul>
<h2 id="how-the-development-went">How the development went</h2>
<p>On linux, the main GUI toolkit, for which themes are made is GTK. As such, I decided that my application should be written using this toolkit. I attempted various languages (that have bindings to GTK - many have them, and these bindings have minimal dependencies besides what one is expected to have in a linux installation), and after months of painful research and failed attempts in Rust and Vala, the Python app got published on GitHub for the first time in July 2021, though it definitely wasn&rsquo;t <em>done</em> yet: it had some bugs, and some missing features that I wanted.</p>
<p>After fixing some early bugs, I started working on adding a new feature: thumbnails for all the available GTK, icon, cursor themes. The GTK and icon themes thumbnails were easily added, as in the theme folder, a GTK theme may have a <code>thumbnail.png</code> that can be loaded and displayed with ease (for those that don&rsquo;t have it, a dummy image is displayed), and the icon themes have icons which can also be easily displayed. The cursor themes, on the other hand, aren&rsquo;t so easy to get displayed: the cursor are stored in a specific format, decodable by <code>libxcursor</code>, a library used by the theme changers in XFCE and MATE for cursor themes previews, though I couldn&rsquo;t really understand their implementations of this feature. I even thought at that time to rewrite once again the app in a language with some sort of access to <code>libxcursor</code>, but I let that feature for another time.  I eventually managed to just use the C code of the XFCE theme changer (they&rsquo;re an open source project, after all) in a C Python module after some time.</p>
<p>While the searchable theme list made the app unique in a good sense, it turned out that it made the app print tons of stacktraces, and I had to figure out the nasty code that produced this stacktrace, that I managed to fix, alongside other hidden issues.</p>
<p>Alongside GTK, there&rsquo;s another big GUI toolkit for linux: QT. While the GTK themes are somewhat standardised for each version, QT&rsquo;s theming is messier. A popular method of theming QT is Kvantum, for which many GTK themes have a counterpart. Adding support for setting its themes wasn&rsquo;t the hardest feature to be implemented, though there&rsquo;s some stuff that can be further implemented for a more complete theme changing experience. That being said, this feature made the app unique and distinguishable enough to give me confidence in <a href="https://www.reddit.com/r/linux/comments/pfgl79/themechanger_a_theme_changing_utility_for_linux/">promoting it to public linux-related circles</a>.</p>
<p>The next feature to get implemented is live reloading. In linux, this is possible using XSETTINGS, a protocol through which various values related to look &amp; feel can get set and updated instantaneousely across the apps that use them. To make XSETTINGS work, you need a daemon that takes care of these values. There are a few daemons available, ranging from the DE-independent <code>xsettingsd</code> to the sollutions provided by each DE. Each daemon has its own method of updating the values, and I had to implement methods of doing that for each daemon. I first implemented support for <code>xsettingsd</code>, then gradually for the daemons which come with the DEs of linux, with methods of determining which daemon is running, if any.</p>
<p>This is where the app stands at the moment of writing this post. I have some plans for the future, though.</p>
<h2 id="plans-for-the-future">Plans for the future</h2>
<p>First, I plan to add a method to get themes online, from the dedicated sites like <a href="https://gnome-look.org">https://gnome-look.org</a> and friends. While their sites&rsquo; UX really sucks, they supposedly provide some APIs that can be used, though I couldn&rsquo;t yet wrap my head around how they work. Hopefully I will achieve that eventually&hellip;</p>
<p>This is a big milestone to be achieved. I also plan on adding some more theming options to my app, like whether clicking the scrollbar will move the content directly to the selected position or page by page. I also want all these options to be applied to Kvantum too, which requires copying a theme file into Kvantum&rsquo;s config folder, which requires storing for each theme its path, which is also useful for another feature I want to add: the ability to remove locally installed themes.</p>
<p>Besides these, I feel like the code I&rsquo;ve written isn&rsquo;t the cleanest, most well-organized there is (after all, this is, like, my first serious programming project that I share with the public), and I feel like I should make something about it sometime, maybe&hellip;</p>
<h2 id="how-to-get-this-app">How to get this app</h2>
<p>The <a href="https://github.com/ALEX11BR/ThemeChanger">GitHub README</a> has instructions to install the app from source, and from some distros&rsquo; repos:</p>
<ul>
<li><strong>Arch Linux &amp; friends</strong>: the <code>themechanger-git</code> AUR package</li>
<li><strong>Nix(OS)</strong>: the <code>themechanger</code> nixpkgs package</li>
</ul>
]]></content:encoded></item><item><title>Goodbye, Jekyll! Welcome, Hugo!</title><link>https://alex11br.github.io/posts/welcome-to-hugo/</link><pubDate>Fri, 12 Nov 2021 21:44:44 +0200</pubDate><guid>https://alex11br.github.io/posts/welcome-to-hugo/</guid><description>If you&amp;rsquo;re seeing this, this site is now running with Hugo.
When I first started using Github Pages, I used Jekyll as a static site generator. It had the advantage of being very easy to get up and running: just create a repo in which you put the markdown files you want to turn into web pages, with other eventual raw HTML you might have, commit, push, and voila, you have a working website.</description><content:encoded><![CDATA[<p>If you&rsquo;re seeing this, this site is now running with Hugo.</p>
<p>When I first started using Github Pages, I used Jekyll as a static site generator. It had the advantage of being very easy to get up and running: just create a repo in which you put the markdown files you want to turn into web pages, with other eventual raw HTML you might have, commit, push, and voila, you have a working website.</p>
<p>That being said, while getting Jekyll to work on the Github Pages remote which publishes the site is super easy, getting it to work on my machines so that I can properly see whatever changes I make to the site isn&rsquo;t that easy. My experience with setting up Ruby on my machines has always been a really painful one, having to fight error after error, and as someone who doesn&rsquo;t use Ruby anywhere else, this is not what I want to go through to see my changes in my blogs. This experience just makes me want to stay away from using Ruby to make apps, I don&rsquo;t like it at all.</p>
<p>Maybe I&rsquo;m just too dumb to use Ruby and its apps, but I just don&rsquo;t like having to set it up. So I tried to look for other static site generators that don&rsquo;t make me install all sorts of <em>dubious runtimes and dependencies</em>, and I found 2 viable alternatives: Zola and Hugo - both written in statically compiled languages (the opposite of <em>dubious runtimes and dependencies</em> - that&rsquo;s pretty cool ðŸ˜Ž).</p>
<p>I ended up choosing Hugo, as I found <a href="https://github.com/adityatelange/hugo-PaperMod">this theme</a> that I could get configured just the way I wanted my blog to be - yay! While some people on the internet appreciated Zola&rsquo;s simplicity as opposed to Hugo, I just could not get my way around its simplicity&hellip;</p>
<p>I hope this post will not be the only one I post here, I hope to write more stuff here, but I haven&rsquo;t a good track record on this. Maybe this is an opportunity to start fresh, to have a better plan with this online space&hellip; We&rsquo;ll see.</p>
]]></content:encoded></item><item><title>Contact</title><link>https://alex11br.github.io/contact/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://alex11br.github.io/contact/</guid><description>There are many social platforms or whatever that I use. Here are a select few:
Email: alexioanpopa11@gmail.com Github: ALEX11BR</description><content:encoded><![CDATA[<p>There are many social platforms or whatever that I use. Here are a select few:</p>
<ul>
<li>Email: <a href="mailto:alexioanpopa11@gmail.com">alexioanpopa11@gmail.com</a></li>
<li>Github: <a href="https://github.com/ALEX11BR">ALEX11BR</a></li>
</ul>
]]></content:encoded></item><item><title>Projects</title><link>https://alex11br.github.io/projects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://alex11br.github.io/projects/</guid><description>I have various projects that I&amp;rsquo;ve made across the years of my existence. As I am a Romanian, some of the projects presented are in Romanian; they will get a Romanian flag(ðŸ‡·ðŸ‡´).
Compunere de oscilaÈ›ii paralele (source) ðŸ‡·ðŸ‡´ Proportional election methods simulation (source) MyFSharpSnake is yet another Snake game clone written in F#. It has a terminal version and a web one, which can be played here. AltSFX is an alternative sound effects pack for OpenTTD, and is available through the in-game online content system.</description><content:encoded><![CDATA[<p>I have various projects that I&rsquo;ve made across the years of my existence. As I am a Romanian, some of the projects presented are in Romanian; they will get a Romanian flag(ðŸ‡·ðŸ‡´).</p>
<ul>
<li><a href="/fizoscomp">Compunere de oscilaÈ›ii paralele</a> (<a href="https://github.com/ALEX11BR/fizoscom">source</a>) ðŸ‡·ðŸ‡´</li>
<li><a href="/proportional-election-simulation">Proportional election methods simulation</a> (<a href="https://github.com/ALEX11BR/proportional-election-simulation">source</a>)</li>
<li><a href="https://github.com/ALEX11BR/MyFSharpSnake">MyFSharpSnake</a> is yet another Snake game clone written in F#. It has a terminal version and a web one, which can be played <a href="/myfsharpsnake-web">here</a>.</li>
<li><a href="https://github.com/ALEX11BR/AltSFX">AltSFX</a> is an alternative sound effects pack for OpenTTD, and is available through the in-game online content system.</li>
<li><a href="https://github.com/ALEX11BR/ThemeChanger">ThemeChanger</a> lets you change GUI themes on Linux with ease. (<a href="/posts/themechanger">blogpost</a>)</li>
<li><a href="https://github.com/ALEX11BR/gxhk">gxhk</a> is a hotkey daemon for X configurable on-the-fly using sockets. (<a href="/posts/gxhk">blogpost</a>)</li>
<li>As a linux user I have various <a href="https://github.com/ALEX11BR/dotfiles">dotfiles</a></li>
</ul>
<p>I&rsquo;m not only a programmer, but I also have other miscellaneous projects:</p>
<ul>
<li>I (used to) make photos of public transportation vehicles, available <a href="https://alexioanpopa.blogspot.com/p/poze-vehicule-transport-in-comun.html">here</a>. ðŸ‡·ðŸ‡´</li>
<li>I also make some maps, that can be seen <a href="https://alexioanpopa.blogspot.com/search/label/H%C4%83r%C8%9Bi">here</a>. ðŸ‡·ðŸ‡´</li>
</ul>
]]></content:encoded></item></channel></rss>