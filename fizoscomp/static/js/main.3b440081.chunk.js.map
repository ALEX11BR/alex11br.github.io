{"version":3,"sources":["Osci.ts","Graph.tsx","Oscilatie.tsx","App.tsx","index.tsx"],"names":["fnFromOsci","osci","i","amplitudine","Math","sin","fazaInitiala","pulsatie","Graph","props","line","TimeSeries","workerTimers","append","Date","now","fn","height","responsive","maxValue","minValue","series","data","strokeStyle","color","lineWidth","grid","verticalSections","Oscilatie","updateProp","val","key","onUpdate","ListGroupItem","Row","Col","xs","index","Button","variant","size","onClick","onDelete","InputGroup","FormControl","type","value","onChange","e","parseFloat","target","Append","Text","App","useState","oscilatii","setOscilatii","Navbar","bg","Brand","Container","fluid","lg","ListGroup","className","map","oscilatie","slice","deleteOsci","o","Item","action","active","randomColor","luminosity","r","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b440081.chunk.js","sourcesContent":["export interface Osci {\r\n  color: string;\r\n  amplitudine: number;\r\n  pulsatie: number;\r\n  fazaInitiala: number;\r\n}\r\n\r\nexport function fnFromOsci(osci: Osci) {\r\n    return (i: number) => osci.amplitudine*Math.sin(osci.fazaInitiala + osci.pulsatie*i*40/1000);\r\n}","import React from 'react';\r\nimport SmoothieComponent, { TimeSeries } from 'react-smoothie';\r\nimport * as workerTimers from 'worker-timers';\r\n\r\ninterface Props {\r\n  fn: (val: number) => number,\r\n  height: number,\r\n  color: string\r\n}\r\n\r\nfunction Graph(props: Props) {\r\n  var i=0;\r\n  var line = new TimeSeries();\r\n  workerTimers.setInterval(() => {\r\n    line.append(Date.now(), props.fn(i++))\r\n  }, 40);\r\n  return (\r\n   <SmoothieComponent height={props.height} responsive maxValue={props.height/2} minValue={-props.height/2} series={[{\r\n     data: line,\r\n     strokeStyle: props.color,\r\n     lineWidth: 4,\r\n   }]} grid={{\r\n    verticalSections: props.height/25\r\n   }}/>\r\n  );\r\n}\r\n\r\nexport default Graph;","import React from 'react';\r\nimport { ListGroupItem, Col, Row, Button, InputGroup, FormControl } from 'react-bootstrap';\r\nimport { BsTrashFill } from 'react-icons/bs';\r\n\r\nimport { Osci, fnFromOsci } from './Osci';\r\nimport Graph from './Graph';\r\n\r\ninterface Props {\r\n  osci: Osci,\r\n  index: number,\r\n  onDelete: () => void,\r\n  onUpdate: (o: Osci) => void\r\n}\r\nfunction Oscilatie(props: Props) {\r\n  const amplitudine = props.osci.amplitudine;\r\n  const pulsatie = props.osci.pulsatie;\r\n  const fazaInitiala = props.osci.fazaInitiala;\r\n\r\n  const updateProp = (val: number, key: \"amplitudine\" | \"pulsatie\" | \"fazaInitiala\") => {\r\n    props.onUpdate({\r\n      ...props.osci,\r\n      [key]: val\r\n    })\r\n  };\r\n  return (\r\n    <ListGroupItem>\r\n      <Row>\r\n        <Col xs={1}>\r\n          <b>{props.index+1}.</b><br />\r\n          <Button variant=\"danger\" size=\"sm\" onClick={props.onDelete}><BsTrashFill /></Button>\r\n        </Col>\r\n        <Col>\r\n          <Graph color={props.osci.color} height={100} fn={fnFromOsci(props.osci)} />\r\n        </Col>\r\n        <Col>\r\n          <Row><span>Amplitudine (A):</span>\r\n            <InputGroup>\r\n              <FormControl type=\"number\" value={amplitudine} onChange={e => updateProp(parseFloat(e.target.value), \"amplitudine\")}></FormControl>\r\n              <InputGroup.Append>\r\n                <InputGroup.Text>px</InputGroup.Text>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n          </Row>\r\n          <Row><span>Pulsație (ω):</span>\r\n            <InputGroup>\r\n              <FormControl type=\"number\" value={pulsatie} onChange={e => updateProp(parseFloat(e.target.value), \"pulsatie\")}></FormControl>\r\n              <InputGroup.Append>\r\n                <InputGroup.Text>rad/s</InputGroup.Text>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n          </Row>\r\n          <Row><span>Faza inițială (φ<sub>0</sub>):</span>\r\n            <InputGroup>\r\n              <FormControl type=\"number\" value={fazaInitiala} onChange={e => updateProp(parseFloat(e.target.value), \"fazaInitiala\")}></FormControl>\r\n              <InputGroup.Append>\r\n                <InputGroup.Text>rad</InputGroup.Text>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </ListGroupItem>\r\n  );\r\n}\r\n\r\nexport default Oscilatie;","import React, { useState } from 'react';\r\nimport { Container, ListGroup, Row, Col, Navbar } from 'react-bootstrap';\r\nimport { BsPlusCircleFill } from 'react-icons/bs';\r\nimport randomColor from 'randomcolor';\r\n\r\nimport { fnFromOsci, Osci } from './Osci';\r\nimport Graph from './Graph';\r\nimport Oscilatie from './Oscilatie';\r\n\r\nfunction App() {\r\n  const [ oscilatii, setOscilatii ] = useState<Osci[]>([])\r\n  function addOsci() {\r\n    setOscilatii([ ...oscilatii, {\r\n      color: randomColor({luminosity: 'light'}),\r\n      amplitudine: oscilatii[0] ? oscilatii[0].amplitudine : 10,\r\n      pulsatie: oscilatii[0] ? oscilatii[0].pulsatie : 1,\r\n      fazaInitiala: oscilatii[0] ? oscilatii[0].fazaInitiala : 0\r\n    }]);\r\n  };\r\n  function deleteOsci(index: number) {\r\n    setOscilatii([\r\n      ...oscilatii.slice(0,index),\r\n      ...oscilatii.slice(index+1)\r\n    ]);\r\n  };\r\n  function composedFn(i: number) {\r\n    var r = 0;\r\n    for (var oscilatie of oscilatii) {\r\n      r+=fnFromOsci(oscilatie)(i);\r\n    }\r\n    return r;\r\n  };\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand>Compunere de oscilații paralele</Navbar.Brand>\r\n      </Navbar>\r\n      <br />\r\n      <Container fluid>\r\n        <Row>\r\n          <Col xs={12} lg={6}>\r\n            <h2>Oscilații de compus</h2>\r\n            <ListGroup className={\"listgroup\"}>\r\n              {oscilatii.map((oscilatie, index) => {\r\n                return (\r\n                  <Oscilatie\r\n                    key={index}\r\n                    index={index}\r\n                    osci={oscilatie}\r\n                    onDelete={() => deleteOsci(index)}\r\n                    onUpdate={(o: Osci) => setOscilatii([\r\n                      ...oscilatii.slice(0,index),\r\n                      o,\r\n                      ...oscilatii.slice(index+1)\r\n                    ])}\r\n                  />\r\n                );\r\n              })}\r\n              <ListGroup.Item className=\"addbutton\" action active onClick={addOsci}><BsPlusCircleFill /> Adaugă oscilație nouă</ListGroup.Item>\r\n            </ListGroup>\r\n            <hr />\r\n          </Col>\r\n          <Col xs={12} lg={6}>\r\n            <h2>Oscilație rezultantă</h2>\r\n            <Graph fn={composedFn} height={200} color=\"#ffffff\" />\r\n            <hr />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}